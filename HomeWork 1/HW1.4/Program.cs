using System;

namespace HW1
{
    class Program
    {
        static void Main()
        {
            int n = Convert.ToInt32(Console.ReadLine()); //количество строк
            int[] numbers = new int[n]; //массив, который будет сохранять диагонали (они будут уменьшатся каждый шаг на 1), которая идет с верху справа в вниз слева.
                                        //То есть, если посмотреть на треуголник паскаля, к примеру, с n = 5, то массив для первой диагонали будет состоять из 5 единиц 
                                        //вторая диагональ будет состоять из 1, 2, 3 и 4, третья из 1, 3 и 6 и т.д.
            Console.Clear();

            for(int i = 0; i < n; i++) //заполняю массив единицами для первой диагонали 
            {
                numbers[i] = 1;
            }

            for(int i = 0; i < n; i++)  // i - это количство диагоналей.
            {
                int spaces = 120 + 4 * i, VerticalDelta = i; // в spaces 120 - это середина консоли(у меня стоит 240 на 60), 4i - это расстояние между диагоналями. 
                for(int j = 0; j < n - i; j++) // j - количество элементов в i-ой диагонали (оно уменьшается единицу каждый шаг)
                {
                    if (j == 0 || i == 0) numbers[j] = 1; // изменение массива для отрисовки диагонали 
                    else numbers[j] += numbers[j - 1]; //будущий элемент будет равен сумме элементов на прошлой диагонали (numbers[j]) и на текущей (numbers[j - 1])

                    Console.SetCursorPosition(spaces, VerticalDelta); // перемещение курсора 
                    Console.Write(numbers[j]); // отрисовка
                    spaces -= 4; //смещение x
                    VerticalDelta ++;// смещение y
                }
            }
        }
    }

}

//принцип кода - это просчитывать и отрисовывать диагонали.
//корректо выодит максимум 26 строк при выставлении настроек консоли на 240 и 60.